#!/command/with-contenv bashio
# ==============================================================================
# Home Assistant Community Add-on: Node-RED
# Runs the Nginx daemon
# ==============================================================================


if bashio::config.has_value 'upstream_server'; then
	bashio::log.info "......"
    bashio::log.info "upstream.server $(bashio::config 'upstream_server')"
    bashio::log.info "upstream.port $(bashio::config 'upstream_port')"
	bashio::log.info "......"
    echo "upstream backend {server $(bashio::config 'upstream_server'):$(bashio::config 'upstream_port');}" > /etc/nginx/includes/upstream.conf
    bashio::log.info  "/etc/nginx/includes/upstream.conf: "$(cat /etc/nginx/includes/upstream.conf )""
fi

if bashio::config.has_value 'upstream_http'; then
http=$(bashio::config 'upstream_http')
bashio::log.info "upstream http or https: select $http"
sed -i "s/http:\/\/backend/$http:\/\/backend/g" /etc/nginx/servers/ingress.conf || bashio::log.info "error http ingress.conf"
sed -i "s/http:\/\/backend/$http:\/\/backend/g" /etc/nginx/servers/direct.conf || bashio::log.info "error http direct.conf or not enable direct port"
fi

bashio::log.info "......"
	
# Install user basic_authentication for backend
username=$(bashio::config 'basic_authentication_username') || bashio::log.info "error basic_authentication ......."
	
    if [ "$username" = "" ]; then	
	    bashio::log.info "basic_authentication upstream not set"
	else
		bashio::log.info "basic_authentication upstream enable ......"

    sed -i '/'proxy_set_header\ Authorization\ \"Basic'/d' /etc/nginx/includes/proxy_params.conf || bashio::log.info "error include proxy_set_header Authorization"
        bashio::log.info "basic_authentication upstream username $(bashio::config 'basic_authentication_username')"
        bashio::log.info "basic_authentication upstream password $(bashio::config 'basic_authentication_password')"
    	base64="$(echo -n "$(bashio::config 'basic_authentication_username')"":""$(bashio::config 'basic_authentication_password')" | base64 )"
    	bashio::log.info "basic_authentication upstream base64 $base64"
    	
    	header="$(echo 'proxy_set_header Authorization "Basic '$base64'"')"

    	sed -i '/'proxy_set_header\ Authorization\ \"Basic'/d' /etc/nginx/includes/proxy_params.conf || bashio::log.info "error include proxy_set_header Authorization"
    	echo "$header" ";" >> /etc/nginx/includes/proxy_params.conf && bashio::log.info "proxy_set_header insert includes/proxy_params.conf" || bashio::log.info "error include proxy_set_header Authorization"

		cat /etc/nginx/includes/proxy_params.conf | grep Authorization

		bashio::log.info "......"
fi

### If the apache is enabled
if bashio::config.true "apache"; then
bashio::log.info "Apache2 before upstream enable"
bashio::log.info "Set Apache2 http 2080 or https 2443 port..."

## Install apache in the middle port 2080 ssl 2443
apk add apache2  || bashio::log.info "apache2 error .." 
apk add apache2-proxy || bashio::log.info "apache2-proxy error .."
apk add libcrypto3 || bashio::log.info "apache2-libcrypto3 error .."
apk add libssl3 || bashio::log.info "apache2-libssl3 error .."
apk add apache2-ssl || bashio::log.info "apache2-ssl error .." 

bashio::log.info "Apache install OK"

sed -i '/12\.34\.56\.78/d' /etc/apache2/httpd.conf
sed -i 's/80/2080/g' /etc/apache2/httpd.conf
sed -i 's/443/2443/g' /etc/apache2/conf.d/ssl.conf 

upstream_http=$(bashio::config 'upstream_http')
upstream_server=$(bashio::config 'upstream_server')
upstream_port=$(bashio::config 'upstream_port')

bashio::log.info "Set Apache proxy upstream..."
echo 'ProxyPassMatch    "^/(.*)$"' $upstream_http://$upstream_server:$upstream_port/'$1'  >> /etc/apache2/httpd.conf || bashio::log.info "apache2 error echo ProxyPassMatch"
cat /etc/apache2/httpd.conf | grep ProxyPassMatch

sed -i 's/ErrorLog/#ErrorLog/g' /etc/apache2/httpd.conf || bashio::log.info ""
sed -i 's/CustomLog/#CustomLog/g' /etc/apache2/httpd.conf || bashio::log.info ""
sed -i 's/TransferLog/#TransferLog/g' /etc/apache2/conf.d/ssl.conf || bashio::log.info ""
sed -i 's/CustomLog/#CustomLog/g' /etc/apache2/conf.d/ssl.conf  || bashio::log.info ""
bashio::log.info "Set new backend NGINX -> Apache"
echo "upstream backend {server 127.0.0.1:2080;}" > /etc/nginx/includes/upstream.conf || bashio::log.info "Error upstream backend NGINX -> APACHE"
cat /etc/nginx/includes/upstream.conf

# If the ssl is enabled
if bashio::config.true "ssl"; then
	bashio::log.info "SSL enable"
    echo "proxy_ssl_verify off;" >> /etc/nginx/includes/server_params.conf || bashio::log.info ""
	sed -i 's/http:\/\//https:\/\//g' /etc/nginx/servers/ingress.conf || bashio::log.info ""
	sed -i 's/http:\/\//https:\/\//g' /etc/nginx/servers/direct.conf || bashio::log.info "error http prot direct.conf or not enable direct port"
	
    else
	sed -i 's/Listen/#Listen/g' /etc/apache2/conf.d/ssl.conf
	sed -i 's/#Listen/Listen/g' /etc/apache2/httpd.conf
	bashio::log.info "SSL not enable"
fi

if bashio::config.true "apache" && bashio::config.true "ssl"; then
    echo "SSLProxyEngine on" >> /etc/apache2/httpd.conf || bashio::log.info ""
    echo "SSLProxyVerify off" >> /etc/apache2/httpd.conf || bashio::log.info ""
    echo "SSLProxyCheckPeerCN off" >> /etc/apache2/httpd.conf || bashio::log.info ""
    echo "SSLProxyCheckPeerName off" >> /etc/apache2/httpd.conf || bashio::log.info ""
	sed -i 's/Listen/#Listen/g' /etc/apache2/httpd.conf
	sed -i 's/#Listen/Listen/g' /etc/apache2/conf.d/ssl.conf
	bashio::log.info "Set new backend NGINX -> Apache"
	echo "upstream backend {server 127.0.0.1:2443;}" > /etc/nginx/includes/upstream.conf || bashio::log.info ""
	cat /etc/nginx/includes/upstream.conf
	bashio::log.info "Apache SSL install OK"
fi

echo '/usr/sbin/httpd' | sh && bashio::log.info "Apache2 before upstream start" || bashio::log.info "Apache2 started error"

bashio::log.info "HA -> NGINX -> APACHE -> upstream"

else
bashio::log.info "Apache2 before upstream not enable"
bashio::log.info "HA -> NGINX -> upstream"

fi

if bashio::config.true "fix_resource_proxy_redirect"; then
sed -i 's/proxy_redirect/#proxy_redirect/g' /etc/nginx/includes/proxy_params.conf

cat << 'EOF' >> /etc/nginx/includes/proxy_params.conf
#FIX RESOURCE ON HASSIO
sub_filter  'src="/' 'src="./';
sub_filter  'href="/' 'href="./' ;
sub_filter  'action="/' 'action="./';

sub_filter  'src=\'/' 'src=\'./';
sub_filter  'href=\'/' 'href=\'./' ;
sub_filter  'action=\'/' 'action=\'./';

sub_filter_once on;
proxy_redirect $uri .$uri;
EOF

bashio::log.info "fix_resource_proxy_redirect enable"

fi

bashio::log.info "Starting NGinx..."

exec nginx
